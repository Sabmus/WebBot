
import time
import os
import pyautogui
import datetime
from PIL import ImageGrab
from numpy import *

'''
def leftClick(x, y):
    pyautogui.click(x, y)
    time.sleep(1)


# calendario inicio
leftClick(193, 507)
time.sleep(2)

# flecha atras
leftClick(198, 510)
time.sleep(2)
'''


import os


CalendarCordSMU = {'1': (195, 556, 212, 569),  # linea 1
                   '2': (220, 556, 237, 569),
                   '3': (244, 556, 261, 569),
                   '4': (269, 556, 286, 569),
                   '5': (293, 556, 310, 569),
                   '6': (318, 556, 335, 569),
                   '7': (343, 556, 360, 569),
                   '8': (195, 579, 212, 592),  # linea 2
                   '9': (220, 579, 237, 592),
                   '10': (244, 579, 261, 592),
                   '11': (269, 579, 286, 592),
                   '12': (293, 579, 310, 592),
                   '13': (318, 579, 335, 592),
                   '14': (343, 579, 360, 592),
                   '15': (195, 602, 212, 615),  # linea 3
                   '16': (220, 602, 237, 615),
                   '17': (244, 602, 261, 615),
                   '18': (269, 602, 286, 615),
                   '19': (293, 602, 310, 615),
                   '20': (318, 602, 335, 615),
                   '21': (343, 602, 360, 615),
                   '22': (195, 625, 212, 637),  # linea 4
                   '23': (220, 625, 237, 637),
                   '24': (244, 625, 261, 637),
                   '25': (269, 625, 286, 637),
                   '26': (293, 625, 310, 637),
                   '27': (318, 625, 335, 637),
                   '28': (343, 625, 360, 637),
                   '29': (195, 648, 212, 660),  # linea 5
                   '30': (220, 648, 237, 660),
                   '31': (244, 648, 261, 660),
                   '32': (269, 648, 286, 660),
                   '33': (293, 648, 310, 660),
                   '34': (318, 648, 335, 660),
                   '35': (343, 648, 360, 660),
                   '36': (195, 671, 212, 683),  # linea 6
                   '37': (220, 671, 237, 683),
                   '38': (244, 671, 261, 683),
                   '39': (269, 671, 286, 683),
                   '40': (293, 671, 310, 683),
                   '41': (318, 671, 335, 683),
                   '42': (343, 671, 360, 683),
                   }

for k, v in sorted(CalendarCordSMU.items(), key=lambda x:int(x[0]), reverse=True):
    print(k + str(v))


#print(CalendarCordSMU.get('box2')[1])


#mapeo = [open('mapeo_pix/' + str(i) + '.txt', 'r') for i in range(1, 43)]
#corpus = [doc.read() for doc in mapeo]

#print(corpus[1])

quitar1 = '(168, 198, 238), '
quitar2 = ', (168, 198, 238)'
aa
paso1 = str(aa).replace(quitar1, '')
paso2 = paso1.replace(quitar2, '')

print(paso2)

print('\n\n\n')


coord_x1 = 195
coord_y1 = 556
coord_x2 = 212
coord_y2 = 569
cont = 1
lista = {}

for x in range(6):
    for y in range(7):
        print(coord_x1, coord_y1, coord_x2, coord_y2)
        l = {str(cont): (coord_x1, coord_y1, coord_x2, coord_y2)}
        lista.update(l)
        cont += 1
        if y % 2 == 0:
            coord_x1 += 25
            coord_x2 += 25
        else:
            coord_x1 += 24
            coord_x2 += 24
    coord_x1 = 195
    coord_x2 = 212
    coord_y1 += 23
    coord_y2 += 23

print(lista)



import datetime
now = datetime.datetime.now()

quitar1 = '(255, 255, 255), '
quitar2 = ', (255, 255, 255)'

# recibe box=(x1, y1, x2, y2)
def screenGrab(box):
    im = ImageGrab.grab(box)
    im.save(os.getcwd() + '\\img\\test' + str(now.date()) + str(box) + '.png', 'PNG')
    return im


time.sleep(5)
for k, v in lista.items():
    text = open(k + '.txt', 'w')
    im = screenGrab(v)
    pix = [im.getpixel((x, y)) for x in range(0, v[2] - v[0]) for y in range(0, v[3] - v[1])]
    paso1 = str(pix).replace(quitar1, '')
    paso2 = paso1.replace(quitar2, '')
    text.write(paso2)
    text.close()
    print(k)
